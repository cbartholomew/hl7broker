//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HL7Broker.ShieldsApps {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtMedicalRecordNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalRecordNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetTwoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseId {
            get {
                return this.EnterpriseIdField;
            }
            set {
                if ((this.EnterpriseIdField.Equals(value) != true)) {
                    this.EnterpriseIdField = value;
                    this.RaisePropertyChanged("EnterpriseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtMedicalRecordNo {
            get {
                return this.ExtMedicalRecordNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtMedicalRecordNoField, value) != true)) {
                    this.ExtMedicalRecordNoField = value;
                    this.RaisePropertyChanged("ExtMedicalRecordNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalRecordNo {
            get {
                return this.MedicalRecordNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalRecordNoField, value) != true)) {
                    this.MedicalRecordNoField = value;
                    this.RaisePropertyChanged("MedicalRecordNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetOne {
            get {
                return this.StreetOneField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetOneField, value) != true)) {
                    this.StreetOneField = value;
                    this.RaisePropertyChanged("StreetOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetTwo {
            get {
                return this.StreetTwoField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetTwoField, value) != true)) {
                    this.StreetTwoField = value;
                    this.RaisePropertyChanged("StreetTwo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ENUM.MESSAGE", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    public enum ENUMMESSAGE : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSERTED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPDATED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_NPI = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_EXAM_ID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_INTERNAL_MRN = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OBJECT_NULL = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_ENTERPRISE_ID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCTOR_INSERT_FAILED = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PATIENT_INSERT_FAILED = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecialtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorId {
            get {
                return this.DoctorIdField;
            }
            set {
                if ((this.DoctorIdField.Equals(value) != true)) {
                    this.DoctorIdField = value;
                    this.RaisePropertyChanged("DoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseId {
            get {
                return this.EnterpriseIdField;
            }
            set {
                if ((this.EnterpriseIdField.Equals(value) != true)) {
                    this.EnterpriseIdField = value;
                    this.RaisePropertyChanged("EnterpriseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Npi {
            get {
                return this.NpiField;
            }
            set {
                if ((object.ReferenceEquals(this.NpiField, value) != true)) {
                    this.NpiField = value;
                    this.RaisePropertyChanged("Npi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecialtyId {
            get {
                return this.SpecialtyIdField;
            }
            set {
                if ((this.SpecialtyIdField.Equals(value) != true)) {
                    this.SpecialtyIdField = value;
                    this.RaisePropertyChanged("SpecialtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyName {
            get {
                return this.SpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyNameField, value) != true)) {
                    this.SpecialtyNameField = value;
                    this.RaisePropertyChanged("SpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> DoctorsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetTwoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorId {
            get {
                return this.DoctorIdField;
            }
            set {
                if ((this.DoctorIdField.Equals(value) != true)) {
                    this.DoctorIdField = value;
                    this.RaisePropertyChanged("DoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> DoctorsList {
            get {
                return this.DoctorsListField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorsListField, value) != true)) {
                    this.DoctorsListField = value;
                    this.RaisePropertyChanged("DoctorsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseId {
            get {
                return this.EnterpriseIdField;
            }
            set {
                if ((this.EnterpriseIdField.Equals(value) != true)) {
                    this.EnterpriseIdField = value;
                    this.RaisePropertyChanged("EnterpriseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNumber {
            get {
                return this.FaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumberField, value) != true)) {
                    this.FaxNumberField = value;
                    this.RaisePropertyChanged("FaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetOne {
            get {
                return this.StreetOneField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetOneField, value) != true)) {
                    this.StreetOneField = value;
                    this.RaisePropertyChanged("StreetOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetTwo {
            get {
                return this.StreetTwoField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetTwoField, value) != true)) {
                    this.StreetTwoField = value;
                    this.RaisePropertyChanged("StreetTwo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exam", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Exam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateRequestedStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HL7Broker.ShieldsApps.Doctor DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamCodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamCodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExamDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamDateStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamSideIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamSideNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReviewedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HL7Broker.ShieldsApps.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HL7Broker.ShieldsApps.Organization OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HL7Broker.ShieldsApps.Patient PatientField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNo {
            get {
                return this.AccessionNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNoField, value) != true)) {
                    this.AccessionNoField = value;
                    this.RaisePropertyChanged("AccessionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateRequested {
            get {
                return this.DateRequestedField;
            }
            set {
                if ((this.DateRequestedField.Equals(value) != true)) {
                    this.DateRequestedField = value;
                    this.RaisePropertyChanged("DateRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateRequestedString {
            get {
                return this.DateRequestedStringField;
            }
            set {
                if ((object.ReferenceEquals(this.DateRequestedStringField, value) != true)) {
                    this.DateRequestedStringField = value;
                    this.RaisePropertyChanged("DateRequestedString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HL7Broker.ShieldsApps.Doctor Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamCodeId {
            get {
                return this.ExamCodeIdField;
            }
            set {
                if ((this.ExamCodeIdField.Equals(value) != true)) {
                    this.ExamCodeIdField = value;
                    this.RaisePropertyChanged("ExamCodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamCodeName {
            get {
                return this.ExamCodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamCodeNameField, value) != true)) {
                    this.ExamCodeNameField = value;
                    this.RaisePropertyChanged("ExamCodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExamDate {
            get {
                return this.ExamDateField;
            }
            set {
                if ((this.ExamDateField.Equals(value) != true)) {
                    this.ExamDateField = value;
                    this.RaisePropertyChanged("ExamDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamDateString {
            get {
                return this.ExamDateStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamDateStringField, value) != true)) {
                    this.ExamDateStringField = value;
                    this.RaisePropertyChanged("ExamDateString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamId {
            get {
                return this.ExamIdField;
            }
            set {
                if ((this.ExamIdField.Equals(value) != true)) {
                    this.ExamIdField = value;
                    this.RaisePropertyChanged("ExamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamSideId {
            get {
                return this.ExamSideIdField;
            }
            set {
                if ((this.ExamSideIdField.Equals(value) != true)) {
                    this.ExamSideIdField = value;
                    this.RaisePropertyChanged("ExamSideId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamSideName {
            get {
                return this.ExamSideNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamSideNameField, value) != true)) {
                    this.ExamSideNameField = value;
                    this.RaisePropertyChanged("ExamSideName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamStatusId {
            get {
                return this.ExamStatusIdField;
            }
            set {
                if ((this.ExamStatusIdField.Equals(value) != true)) {
                    this.ExamStatusIdField = value;
                    this.RaisePropertyChanged("ExamStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamStatusName {
            get {
                return this.ExamStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamStatusNameField, value) != true)) {
                    this.ExamStatusNameField = value;
                    this.RaisePropertyChanged("ExamStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamTypeId {
            get {
                return this.ExamTypeIdField;
            }
            set {
                if ((this.ExamTypeIdField.Equals(value) != true)) {
                    this.ExamTypeIdField = value;
                    this.RaisePropertyChanged("ExamTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamTypeName {
            get {
                return this.ExamTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamTypeNameField, value) != true)) {
                    this.ExamTypeNameField = value;
                    this.RaisePropertyChanged("ExamTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReviewed {
            get {
                return this.IsReviewedField;
            }
            set {
                if ((this.IsReviewedField.Equals(value) != true)) {
                    this.IsReviewedField = value;
                    this.RaisePropertyChanged("IsReviewed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HL7Broker.ShieldsApps.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HL7Broker.ShieldsApps.Organization Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HL7Broker.ShieldsApps.Patient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Organization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Base64ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetTwoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Base64Image {
            get {
                return this.Base64ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.Base64ImageField, value) != true)) {
                    this.Base64ImageField = value;
                    this.RaisePropertyChanged("Base64Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseId {
            get {
                return this.EnterpriseIdField;
            }
            set {
                if ((this.EnterpriseIdField.Equals(value) != true)) {
                    this.EnterpriseIdField = value;
                    this.RaisePropertyChanged("EnterpriseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNumber {
            get {
                return this.FaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumberField, value) != true)) {
                    this.FaxNumberField = value;
                    this.RaisePropertyChanged("FaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationId {
            get {
                return this.OrganizationIdField;
            }
            set {
                if ((this.OrganizationIdField.Equals(value) != true)) {
                    this.OrganizationIdField = value;
                    this.RaisePropertyChanged("OrganizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetOne {
            get {
                return this.StreetOneField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetOneField, value) != true)) {
                    this.StreetOneField = value;
                    this.RaisePropertyChanged("StreetOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetTwo {
            get {
                return this.StreetTwoField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetTwoField, value) != true)) {
                    this.StreetTwoField = value;
                    this.RaisePropertyChanged("StreetTwo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAddendumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ObservationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservationDateStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadiologistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RadiologistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamId {
            get {
                return this.ExamIdField;
            }
            set {
                if ((this.ExamIdField.Equals(value) != true)) {
                    this.ExamIdField = value;
                    this.RaisePropertyChanged("ExamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAddendum {
            get {
                return this.IsAddendumField;
            }
            set {
                if ((this.IsAddendumField.Equals(value) != true)) {
                    this.IsAddendumField = value;
                    this.RaisePropertyChanged("IsAddendum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ObservationDate {
            get {
                return this.ObservationDateField;
            }
            set {
                if ((this.ObservationDateField.Equals(value) != true)) {
                    this.ObservationDateField = value;
                    this.RaisePropertyChanged("ObservationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObservationDateString {
            get {
                return this.ObservationDateStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservationDateStringField, value) != true)) {
                    this.ObservationDateStringField = value;
                    this.RaisePropertyChanged("ObservationDateString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadiologistId {
            get {
                return this.RadiologistIdField;
            }
            set {
                if ((this.RadiologistIdField.Equals(value) != true)) {
                    this.RadiologistIdField = value;
                    this.RaisePropertyChanged("RadiologistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RadiologistName {
            get {
                return this.RadiologistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RadiologistNameField, value) != true)) {
                    this.RadiologistNameField = value;
                    this.RaisePropertyChanged("RadiologistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportText {
            get {
                return this.ReportTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTextField, value) != true)) {
                    this.ReportTextField = value;
                    this.RaisePropertyChanged("ReportText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preferences", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Preferences : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultPracticeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HL7Broker.ShieldsApps.MasterExamStatus> MasterExamStatusesListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultPracticeId {
            get {
                return this.DefaultPracticeIdField;
            }
            set {
                if ((this.DefaultPracticeIdField.Equals(value) != true)) {
                    this.DefaultPracticeIdField = value;
                    this.RaisePropertyChanged("DefaultPracticeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.MasterExamStatus> MasterExamStatusesList {
            get {
                return this.MasterExamStatusesListField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterExamStatusesListField, value) != true)) {
                    this.MasterExamStatusesListField = value;
                    this.RaisePropertyChanged("MasterExamStatusesList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreferenceId {
            get {
                return this.PreferenceIdField;
            }
            set {
                if ((this.PreferenceIdField.Equals(value) != true)) {
                    this.PreferenceIdField = value;
                    this.RaisePropertyChanged("PreferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterExamStatus", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class MasterExamStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterExamStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterExamStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MasterExamStatusValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterExamStatusId {
            get {
                return this.MasterExamStatusIdField;
            }
            set {
                if ((this.MasterExamStatusIdField.Equals(value) != true)) {
                    this.MasterExamStatusIdField = value;
                    this.RaisePropertyChanged("MasterExamStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterExamStatusName {
            get {
                return this.MasterExamStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterExamStatusNameField, value) != true)) {
                    this.MasterExamStatusNameField = value;
                    this.RaisePropertyChanged("MasterExamStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MasterExamStatusValue {
            get {
                return this.MasterExamStatusValueField;
            }
            set {
                if ((this.MasterExamStatusValueField.Equals(value) != true)) {
                    this.MasterExamStatusValueField = value;
                    this.RaisePropertyChanged("MasterExamStatusValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Practice", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Practice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> DoctorsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PracticeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PracticeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> DoctorsList {
            get {
                return this.DoctorsListField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorsListField, value) != true)) {
                    this.DoctorsListField = value;
                    this.RaisePropertyChanged("DoctorsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PracticeId {
            get {
                return this.PracticeIdField;
            }
            set {
                if ((this.PracticeIdField.Equals(value) != true)) {
                    this.PracticeIdField = value;
                    this.RaisePropertyChanged("PracticeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PracticeName {
            get {
                return this.PracticeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeNameField, value) != true)) {
                    this.PracticeNameField = value;
                    this.RaisePropertyChanged("PracticeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Share", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class Share : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShareDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShareFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShareFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShareIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShareStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShareToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShareToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShareTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNo {
            get {
                return this.AccessionNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNoField, value) != true)) {
                    this.AccessionNoField = value;
                    this.RaisePropertyChanged("AccessionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamId {
            get {
                return this.ExamIdField;
            }
            set {
                if ((this.ExamIdField.Equals(value) != true)) {
                    this.ExamIdField = value;
                    this.RaisePropertyChanged("ExamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShareDisabled {
            get {
                return this.ShareDisabledField;
            }
            set {
                if ((this.ShareDisabledField.Equals(value) != true)) {
                    this.ShareDisabledField = value;
                    this.RaisePropertyChanged("ShareDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShareFrom {
            get {
                return this.ShareFromField;
            }
            set {
                if ((this.ShareFromField.Equals(value) != true)) {
                    this.ShareFromField = value;
                    this.RaisePropertyChanged("ShareFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShareFromName {
            get {
                return this.ShareFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShareFromNameField, value) != true)) {
                    this.ShareFromNameField = value;
                    this.RaisePropertyChanged("ShareFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShareId {
            get {
                return this.ShareIdField;
            }
            set {
                if ((this.ShareIdField.Equals(value) != true)) {
                    this.ShareIdField = value;
                    this.RaisePropertyChanged("ShareId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShareStatus {
            get {
                return this.ShareStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShareStatusField, value) != true)) {
                    this.ShareStatusField = value;
                    this.RaisePropertyChanged("ShareStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShareTo {
            get {
                return this.ShareToField;
            }
            set {
                if ((this.ShareToField.Equals(value) != true)) {
                    this.ShareToField = value;
                    this.RaisePropertyChanged("ShareTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShareToName {
            get {
                return this.ShareToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShareToNameField, value) != true)) {
                    this.ShareToNameField = value;
                    this.RaisePropertyChanged("ShareToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShareType {
            get {
                return this.ShareTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShareTypeField, value) != true)) {
                    this.ShareTypeField = value;
                    this.RaisePropertyChanged("ShareType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamNote", Namespace="http://schemas.datacontract.org/2004/07/WSShieldsApps")]
    [System.SerializableAttribute()]
    public partial class ExamNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamNoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamId {
            get {
                return this.ExamIdField;
            }
            set {
                if ((this.ExamIdField.Equals(value) != true)) {
                    this.ExamIdField = value;
                    this.RaisePropertyChanged("ExamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamNoteId {
            get {
                return this.ExamNoteIdField;
            }
            set {
                if ((this.ExamNoteIdField.Equals(value) != true)) {
                    this.ExamNoteIdField = value;
                    this.RaisePropertyChanged("ExamNoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShieldsApps.IShieldsApps")]
    public interface IShieldsApps {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPatientByPatientId", ReplyAction="http://tempuri.org/IShieldsApps/GetPatientByPatientIdResponse")]
        HL7Broker.ShieldsApps.Patient GetPatientByPatientId(string patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPatientByPatientId", ReplyAction="http://tempuri.org/IShieldsApps/GetPatientByPatientIdResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Patient> GetPatientByPatientIdAsync(string patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdatePatient", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdatePatientResponse")]
        HL7Broker.ShieldsApps.InsertUpdatePatientResponse InsertUpdatePatient(HL7Broker.ShieldsApps.InsertUpdatePatientRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdatePatient", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdatePatientResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdatePatientResponse> InsertUpdatePatientAsync(HL7Broker.ShieldsApps.InsertUpdatePatientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetAllRadiologists", ReplyAction="http://tempuri.org/IShieldsApps/GetAllRadiologistsResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetAllRadiologists();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetAllRadiologists", ReplyAction="http://tempuri.org/IShieldsApps/GetAllRadiologistsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetAllRadiologistsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateDoctor", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateDoctorResponse")]
        HL7Broker.ShieldsApps.InsertUpdateDoctorResponse InsertUpdateDoctor(HL7Broker.ShieldsApps.InsertUpdateDoctorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateDoctor", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateDoctorResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdateDoctorResponse> InsertUpdateDoctorAsync(HL7Broker.ShieldsApps.InsertUpdateDoctorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetLocationsByDoctorId", ReplyAction="http://tempuri.org/IShieldsApps/GetLocationsByDoctorIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Location> GetLocationsByDoctorId(string doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetLocationsByDoctorId", ReplyAction="http://tempuri.org/IShieldsApps/GetLocationsByDoctorIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Location>> GetLocationsByDoctorIdAsync(string doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetDoctorsByLocationId", ReplyAction="http://tempuri.org/IShieldsApps/GetDoctorsByLocationIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetDoctorsByLocationId(string locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetDoctorsByLocationId", ReplyAction="http://tempuri.org/IShieldsApps/GetDoctorsByLocationIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetDoctorsByLocationIdAsync(string locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetLocationsWithDoctorsByDoctorId", ReplyAction="http://tempuri.org/IShieldsApps/GetLocationsWithDoctorsByDoctorIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Location> GetLocationsWithDoctorsByDoctorId(string doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetLocationsWithDoctorsByDoctorId", ReplyAction="http://tempuri.org/IShieldsApps/GetLocationsWithDoctorsByDoctorIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Location>> GetLocationsWithDoctorsByDoctorIdAsync(string doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertDoctorIntoLocation", ReplyAction="http://tempuri.org/IShieldsApps/InsertDoctorIntoLocationResponse")]
        bool InsertDoctorIntoLocation(int doctorId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertDoctorIntoLocation", ReplyAction="http://tempuri.org/IShieldsApps/InsertDoctorIntoLocationResponse")]
        System.Threading.Tasks.Task<bool> InsertDoctorIntoLocationAsync(int doctorId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertLocation", ReplyAction="http://tempuri.org/IShieldsApps/InsertLocationResponse")]
        int InsertLocation(HL7Broker.ShieldsApps.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertLocation", ReplyAction="http://tempuri.org/IShieldsApps/InsertLocationResponse")]
        System.Threading.Tasks.Task<int> InsertLocationAsync(HL7Broker.ShieldsApps.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertLocationIntoPractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertLocationIntoPracticeResponse")]
        bool InsertLocationIntoPractice(int locationId, int practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertLocationIntoPractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertLocationIntoPracticeResponse")]
        System.Threading.Tasks.Task<bool> InsertLocationIntoPracticeAsync(int locationId, int practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamByExamId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamByExamIdResponse")]
        HL7Broker.ShieldsApps.Exam GetExamByExamId(int examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamByExamId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamByExamIdResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Exam> GetExamByExamIdAsync(int examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamByAccessionNo", ReplyAction="http://tempuri.org/IShieldsApps/GetExamByAccessionNoResponse")]
        HL7Broker.ShieldsApps.Exam GetExamByAccessionNo(string accessionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamByAccessionNo", ReplyAction="http://tempuri.org/IShieldsApps/GetExamByAccessionNoResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Exam> GetExamByAccessionNoAsync(string accessionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndLocationId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndLocationIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetExamsByDoctorIdAndLocationId(string doctorId, string locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndLocationId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndLocationIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetExamsByDoctorIdAndLocationIdAsync(string doctorId, string locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndPracticeId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndPracticeIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetExamsByDoctorIdAndPracticeId(string userId, string doctorId, string practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndPracticeId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamsByDoctorIdAndPracticeIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetExamsByDoctorIdAndPracticeIdAsync(string userId, string doctorId, string practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetUnlinkedExamsFromLocations", ReplyAction="http://tempuri.org/IShieldsApps/GetUnlinkedExamsFromLocationsResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetUnlinkedExamsFromLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetUnlinkedExamsFromLocations", ReplyAction="http://tempuri.org/IShieldsApps/GetUnlinkedExamsFromLocationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetUnlinkedExamsFromLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/SetupSelLinks", ReplyAction="http://tempuri.org/IShieldsApps/SetupSelLinksResponse")]
        void SetupSelLinks(int doctorId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/SetupSelLinks", ReplyAction="http://tempuri.org/IShieldsApps/SetupSelLinksResponse")]
        System.Threading.Tasks.Task SetupSelLinksAsync(int doctorId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamCode", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamCodeResponse")]
        int InsertExamCode(string examCodeName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamCode", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamCodeResponse")]
        System.Threading.Tasks.Task<int> InsertExamCodeAsync(string examCodeName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamSide", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamSideResponse")]
        int InsertExamSide(string examSideName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamSide", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamSideResponse")]
        System.Threading.Tasks.Task<int> InsertExamSideAsync(string examSideName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamStatus", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamStatusResponse")]
        int InsertExamStatus(string examStatusName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamStatus", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamStatusResponse")]
        System.Threading.Tasks.Task<int> InsertExamStatusAsync(string examStatusName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamType", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamTypeResponse")]
        int InsertExamType(string examTypeName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamType", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamTypeResponse")]
        System.Threading.Tasks.Task<int> InsertExamTypeAsync(string examTypeName, int enterpriseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateExam", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateExamResponse")]
        HL7Broker.ShieldsApps.InsertUpdateExamResponse InsertUpdateExam(HL7Broker.ShieldsApps.InsertUpdateExamRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateExam", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateExamResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdateExamResponse> InsertUpdateExamAsync(HL7Broker.ShieldsApps.InsertUpdateExamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamByHl7", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamByHl7Response")]
        HL7Broker.ShieldsApps.InsertExamByHl7Response InsertExamByHl7(HL7Broker.ShieldsApps.InsertExamByHl7Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamByHl7", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamByHl7Response")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertExamByHl7Response> InsertExamByHl7Async(HL7Broker.ShieldsApps.InsertExamByHl7Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateOrganization", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateOrganizationResponse")]
        HL7Broker.ShieldsApps.InsertUpdateOrganizationResponse InsertUpdateOrganization(HL7Broker.ShieldsApps.InsertUpdateOrganizationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateOrganization", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateOrganizationResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdateOrganizationResponse> InsertUpdateOrganizationAsync(HL7Broker.ShieldsApps.InsertUpdateOrganizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetReportByExamId", ReplyAction="http://tempuri.org/IShieldsApps/GetReportByExamIdResponse")]
        HL7Broker.ShieldsApps.Report GetReportByExamId(string doctorId, string examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetReportByExamId", ReplyAction="http://tempuri.org/IShieldsApps/GetReportByExamIdResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Report> GetReportByExamIdAsync(string doctorId, string examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertReport", ReplyAction="http://tempuri.org/IShieldsApps/InsertReportResponse")]
        HL7Broker.ShieldsApps.InsertReportResponse InsertReport(HL7Broker.ShieldsApps.InsertReportRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertReport", ReplyAction="http://tempuri.org/IShieldsApps/InsertReportResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertReportResponse> InsertReportAsync(HL7Broker.ShieldsApps.InsertReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPreferencesByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetPreferencesByUserIdResponse")]
        HL7Broker.ShieldsApps.Preferences GetPreferencesByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPreferencesByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetPreferencesByUserIdResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Preferences> GetPreferencesByUserIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdatePreferencesByUserId", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdatePreferencesByUserIdResponse")]
        bool InsertUpdatePreferencesByUserId(HL7Broker.ShieldsApps.Preferences preference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdatePreferencesByUserId", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdatePreferencesByUserIdResponse")]
        System.Threading.Tasks.Task<bool> InsertUpdatePreferencesByUserIdAsync(HL7Broker.ShieldsApps.Preferences preference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPracticesByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetPracticesByUserIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice> GetPracticesByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPracticesByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetPracticesByUserIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice>> GetPracticesByUserIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetDoctorsByPracticeId", ReplyAction="http://tempuri.org/IShieldsApps/GetDoctorsByPracticeIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetDoctorsByPracticeId(string practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetDoctorsByPracticeId", ReplyAction="http://tempuri.org/IShieldsApps/GetDoctorsByPracticeIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetDoctorsByPracticeIdAsync(string practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPracticesWithDoctorsByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetPracticesWithDoctorsByUserIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice> GetPracticesWithDoctorsByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetPracticesWithDoctorsByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetPracticesWithDoctorsByUserIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice>> GetPracticesWithDoctorsByUserIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdatePractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdatePracticeResponse")]
        HL7Broker.ShieldsApps.InsertUpdatePracticeResponse InsertUpdatePractice(HL7Broker.ShieldsApps.InsertUpdatePracticeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdatePractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdatePracticeResponse")]
        System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdatePracticeResponse> InsertUpdatePracticeAsync(HL7Broker.ShieldsApps.InsertUpdatePracticeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUserIntoPractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertUserIntoPracticeResponse")]
        bool InsertUserIntoPractice(int userId, int practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUserIntoPractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertUserIntoPracticeResponse")]
        System.Threading.Tasks.Task<bool> InsertUserIntoPracticeAsync(int userId, int practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertDoctorIntoPractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertDoctorIntoPracticeResponse")]
        bool InsertDoctorIntoPractice(int doctorId, int practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertDoctorIntoPractice", ReplyAction="http://tempuri.org/IShieldsApps/InsertDoctorIntoPracticeResponse")]
        System.Threading.Tasks.Task<bool> InsertDoctorIntoPracticeAsync(int doctorId, int practiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetSharedExamsByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetSharedExamsByUserIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Share> GetSharedExamsByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetSharedExamsByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetSharedExamsByUserIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Share>> GetSharedExamsByUserIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetUsersYouRecentlySharedWith", ReplyAction="http://tempuri.org/IShieldsApps/GetUsersYouRecentlySharedWithResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.User> GetUsersYouRecentlySharedWith(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetUsersYouRecentlySharedWith", ReplyAction="http://tempuri.org/IShieldsApps/GetUsersYouRecentlySharedWithResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.User>> GetUsersYouRecentlySharedWithAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateSharedExam", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateSharedExamResponse")]
        int InsertUpdateSharedExam(HL7Broker.ShieldsApps.Share sharedExam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateSharedExam", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateSharedExamResponse")]
        System.Threading.Tasks.Task<int> InsertUpdateSharedExamAsync(HL7Broker.ShieldsApps.Share sharedExam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/Search", ReplyAction="http://tempuri.org/IShieldsApps/SearchResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> Search(string userId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/Search", ReplyAction="http://tempuri.org/IShieldsApps/SearchResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> SearchAsync(string userId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetDoctorBySearchText", ReplyAction="http://tempuri.org/IShieldsApps/GetDoctorBySearchTextResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetDoctorBySearchText(string userId, string searchText, string doctorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetDoctorBySearchText", ReplyAction="http://tempuri.org/IShieldsApps/GetDoctorBySearchTextResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetDoctorBySearchTextAsync(string userId, string searchText, string doctorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetUserBySearchText", ReplyAction="http://tempuri.org/IShieldsApps/GetUserBySearchTextResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.User> GetUserBySearchText(string userId, string searchText, int scopeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetUserBySearchText", ReplyAction="http://tempuri.org/IShieldsApps/GetUserBySearchTextResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.User>> GetUserBySearchTextAsync(string userId, string searchText, int scopeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetReviewedExamsByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetReviewedExamsByUserIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetReviewedExamsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetReviewedExamsByUserId", ReplyAction="http://tempuri.org/IShieldsApps/GetReviewedExamsByUserIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetReviewedExamsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetNonReviewedExamsByDoctorIdAndPracticeId", ReplyAction="http://tempuri.org/IShieldsApps/GetNonReviewedExamsByDoctorIdAndPracticeIdRespons" +
            "e")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetNonReviewedExamsByDoctorIdAndPracticeId(int doctorId, int practiceId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetNonReviewedExamsByDoctorIdAndPracticeId", ReplyAction="http://tempuri.org/IShieldsApps/GetNonReviewedExamsByDoctorIdAndPracticeIdRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetNonReviewedExamsByDoctorIdAndPracticeIdAsync(int doctorId, int practiceId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateReviewedExam", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateReviewedExamResponse")]
        bool InsertUpdateReviewedExam(string userId, string examId, string isReviewed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertUpdateReviewedExam", ReplyAction="http://tempuri.org/IShieldsApps/InsertUpdateReviewedExamResponse")]
        System.Threading.Tasks.Task<bool> InsertUpdateReviewedExamAsync(string userId, string examId, string isReviewed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamNotesByExamId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamNotesByExamIdResponse")]
        System.Collections.Generic.List<HL7Broker.ShieldsApps.ExamNote> GetExamNotesByExamId(int examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/GetExamNotesByExamId", ReplyAction="http://tempuri.org/IShieldsApps/GetExamNotesByExamIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.ExamNote>> GetExamNotesByExamIdAsync(int examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamNoteByExamIdAndUserId", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamNoteByExamIdAndUserIdResponse")]
        int InsertExamNoteByExamIdAndUserId(HL7Broker.ShieldsApps.ExamNote examNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShieldsApps/InsertExamNoteByExamIdAndUserId", ReplyAction="http://tempuri.org/IShieldsApps/InsertExamNoteByExamIdAndUserIdResponse")]
        System.Threading.Tasks.Task<int> InsertExamNoteByExamIdAndUserIdAsync(HL7Broker.ShieldsApps.ExamNote examNote);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdatePatient", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdatePatientRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HL7Broker.ShieldsApps.Patient patient;
        
        public InsertUpdatePatientRequest() {
        }
        
        public InsertUpdatePatientRequest(HL7Broker.ShieldsApps.Patient patient) {
            this.patient = patient;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdatePatientResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdatePatientResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertUpdatePatientResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertUpdatePatientResponse() {
        }
        
        public InsertUpdatePatientResponse(int InsertUpdatePatientResult, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertUpdatePatientResult = InsertUpdatePatientResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdateDoctor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdateDoctorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HL7Broker.ShieldsApps.Doctor doctor;
        
        public InsertUpdateDoctorRequest() {
        }
        
        public InsertUpdateDoctorRequest(HL7Broker.ShieldsApps.Doctor doctor) {
            this.doctor = doctor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdateDoctorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdateDoctorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertUpdateDoctorResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertUpdateDoctorResponse() {
        }
        
        public InsertUpdateDoctorResponse(int InsertUpdateDoctorResult, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertUpdateDoctorResult = InsertUpdateDoctorResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdateExam", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdateExamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HL7Broker.ShieldsApps.Exam exam;
        
        public InsertUpdateExamRequest() {
        }
        
        public InsertUpdateExamRequest(HL7Broker.ShieldsApps.Exam exam) {
            this.exam = exam;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdateExamResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdateExamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertUpdateExamResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertUpdateExamResponse() {
        }
        
        public InsertUpdateExamResponse(int InsertUpdateExamResult, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertUpdateExamResult = InsertUpdateExamResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertExamByHl7", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertExamByHl7Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HL7Broker.ShieldsApps.Exam exam;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int enterpriseId;
        
        public InsertExamByHl7Request() {
        }
        
        public InsertExamByHl7Request(HL7Broker.ShieldsApps.Exam exam, int enterpriseId) {
            this.exam = exam;
            this.enterpriseId = enterpriseId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertExamByHl7Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertExamByHl7Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertExamByHl7Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertExamByHl7Response() {
        }
        
        public InsertExamByHl7Response(int InsertExamByHl7Result, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertExamByHl7Result = InsertExamByHl7Result;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdateOrganization", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdateOrganizationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HL7Broker.ShieldsApps.Organization organization;
        
        public InsertUpdateOrganizationRequest() {
        }
        
        public InsertUpdateOrganizationRequest(HL7Broker.ShieldsApps.Organization organization) {
            this.organization = organization;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdateOrganizationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdateOrganizationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertUpdateOrganizationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertUpdateOrganizationResponse() {
        }
        
        public InsertUpdateOrganizationResponse(int InsertUpdateOrganizationResult, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertUpdateOrganizationResult = InsertUpdateOrganizationResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertReport", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HL7Broker.ShieldsApps.Report report;
        
        public InsertReportRequest() {
        }
        
        public InsertReportRequest(HL7Broker.ShieldsApps.Report report) {
            this.report = report;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertReportResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertReportResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertReportResponse() {
        }
        
        public InsertReportResponse(int InsertReportResult, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertReportResult = InsertReportResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdatePractice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdatePracticeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string practiceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int practiceId;
        
        public InsertUpdatePracticeRequest() {
        }
        
        public InsertUpdatePracticeRequest(string practiceName, int practiceId) {
            this.practiceName = practiceName;
            this.practiceId = practiceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUpdatePracticeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertUpdatePracticeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int InsertUpdatePracticeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HL7Broker.ShieldsApps.ENUMMESSAGE message;
        
        public InsertUpdatePracticeResponse() {
        }
        
        public InsertUpdatePracticeResponse(int InsertUpdatePracticeResult, HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            this.InsertUpdatePracticeResult = InsertUpdatePracticeResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShieldsAppsChannel : HL7Broker.ShieldsApps.IShieldsApps, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShieldsAppsClient : System.ServiceModel.ClientBase<HL7Broker.ShieldsApps.IShieldsApps>, HL7Broker.ShieldsApps.IShieldsApps {
        
        public ShieldsAppsClient() {
        }
        
        public ShieldsAppsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShieldsAppsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShieldsAppsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShieldsAppsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HL7Broker.ShieldsApps.Patient GetPatientByPatientId(string patientId) {
            return base.Channel.GetPatientByPatientId(patientId);
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Patient> GetPatientByPatientIdAsync(string patientId) {
            return base.Channel.GetPatientByPatientIdAsync(patientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertUpdatePatientResponse HL7Broker.ShieldsApps.IShieldsApps.InsertUpdatePatient(HL7Broker.ShieldsApps.InsertUpdatePatientRequest request) {
            return base.Channel.InsertUpdatePatient(request);
        }
        
        public int InsertUpdatePatient(HL7Broker.ShieldsApps.Patient patient, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertUpdatePatientRequest inValue = new HL7Broker.ShieldsApps.InsertUpdatePatientRequest();
            inValue.patient = patient;
            HL7Broker.ShieldsApps.InsertUpdatePatientResponse retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertUpdatePatient(inValue);
            message = retVal.message;
            return retVal.InsertUpdatePatientResult;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdatePatientResponse> InsertUpdatePatientAsync(HL7Broker.ShieldsApps.InsertUpdatePatientRequest request) {
            return base.Channel.InsertUpdatePatientAsync(request);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetAllRadiologists() {
            return base.Channel.GetAllRadiologists();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetAllRadiologistsAsync() {
            return base.Channel.GetAllRadiologistsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertUpdateDoctorResponse HL7Broker.ShieldsApps.IShieldsApps.InsertUpdateDoctor(HL7Broker.ShieldsApps.InsertUpdateDoctorRequest request) {
            return base.Channel.InsertUpdateDoctor(request);
        }
        
        public int InsertUpdateDoctor(HL7Broker.ShieldsApps.Doctor doctor, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertUpdateDoctorRequest inValue = new HL7Broker.ShieldsApps.InsertUpdateDoctorRequest();
            inValue.doctor = doctor;
            HL7Broker.ShieldsApps.InsertUpdateDoctorResponse retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertUpdateDoctor(inValue);
            message = retVal.message;
            return retVal.InsertUpdateDoctorResult;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdateDoctorResponse> InsertUpdateDoctorAsync(HL7Broker.ShieldsApps.InsertUpdateDoctorRequest request) {
            return base.Channel.InsertUpdateDoctorAsync(request);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Location> GetLocationsByDoctorId(string doctorId) {
            return base.Channel.GetLocationsByDoctorId(doctorId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Location>> GetLocationsByDoctorIdAsync(string doctorId) {
            return base.Channel.GetLocationsByDoctorIdAsync(doctorId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetDoctorsByLocationId(string locationId) {
            return base.Channel.GetDoctorsByLocationId(locationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetDoctorsByLocationIdAsync(string locationId) {
            return base.Channel.GetDoctorsByLocationIdAsync(locationId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Location> GetLocationsWithDoctorsByDoctorId(string doctorId) {
            return base.Channel.GetLocationsWithDoctorsByDoctorId(doctorId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Location>> GetLocationsWithDoctorsByDoctorIdAsync(string doctorId) {
            return base.Channel.GetLocationsWithDoctorsByDoctorIdAsync(doctorId);
        }
        
        public bool InsertDoctorIntoLocation(int doctorId, int locationId) {
            return base.Channel.InsertDoctorIntoLocation(doctorId, locationId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertDoctorIntoLocationAsync(int doctorId, int locationId) {
            return base.Channel.InsertDoctorIntoLocationAsync(doctorId, locationId);
        }
        
        public int InsertLocation(HL7Broker.ShieldsApps.Location location) {
            return base.Channel.InsertLocation(location);
        }
        
        public System.Threading.Tasks.Task<int> InsertLocationAsync(HL7Broker.ShieldsApps.Location location) {
            return base.Channel.InsertLocationAsync(location);
        }
        
        public bool InsertLocationIntoPractice(int locationId, int practiceId) {
            return base.Channel.InsertLocationIntoPractice(locationId, practiceId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertLocationIntoPracticeAsync(int locationId, int practiceId) {
            return base.Channel.InsertLocationIntoPracticeAsync(locationId, practiceId);
        }
        
        public HL7Broker.ShieldsApps.Exam GetExamByExamId(int examId) {
            return base.Channel.GetExamByExamId(examId);
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Exam> GetExamByExamIdAsync(int examId) {
            return base.Channel.GetExamByExamIdAsync(examId);
        }
        
        public HL7Broker.ShieldsApps.Exam GetExamByAccessionNo(string accessionNo) {
            return base.Channel.GetExamByAccessionNo(accessionNo);
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Exam> GetExamByAccessionNoAsync(string accessionNo) {
            return base.Channel.GetExamByAccessionNoAsync(accessionNo);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetExamsByDoctorIdAndLocationId(string doctorId, string locationId) {
            return base.Channel.GetExamsByDoctorIdAndLocationId(doctorId, locationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetExamsByDoctorIdAndLocationIdAsync(string doctorId, string locationId) {
            return base.Channel.GetExamsByDoctorIdAndLocationIdAsync(doctorId, locationId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetExamsByDoctorIdAndPracticeId(string userId, string doctorId, string practiceId) {
            return base.Channel.GetExamsByDoctorIdAndPracticeId(userId, doctorId, practiceId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetExamsByDoctorIdAndPracticeIdAsync(string userId, string doctorId, string practiceId) {
            return base.Channel.GetExamsByDoctorIdAndPracticeIdAsync(userId, doctorId, practiceId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetUnlinkedExamsFromLocations() {
            return base.Channel.GetUnlinkedExamsFromLocations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetUnlinkedExamsFromLocationsAsync() {
            return base.Channel.GetUnlinkedExamsFromLocationsAsync();
        }
        
        public void SetupSelLinks(int doctorId, int locationId) {
            base.Channel.SetupSelLinks(doctorId, locationId);
        }
        
        public System.Threading.Tasks.Task SetupSelLinksAsync(int doctorId, int locationId) {
            return base.Channel.SetupSelLinksAsync(doctorId, locationId);
        }
        
        public int InsertExamCode(string examCodeName, int enterpriseId) {
            return base.Channel.InsertExamCode(examCodeName, enterpriseId);
        }
        
        public System.Threading.Tasks.Task<int> InsertExamCodeAsync(string examCodeName, int enterpriseId) {
            return base.Channel.InsertExamCodeAsync(examCodeName, enterpriseId);
        }
        
        public int InsertExamSide(string examSideName, int enterpriseId) {
            return base.Channel.InsertExamSide(examSideName, enterpriseId);
        }
        
        public System.Threading.Tasks.Task<int> InsertExamSideAsync(string examSideName, int enterpriseId) {
            return base.Channel.InsertExamSideAsync(examSideName, enterpriseId);
        }
        
        public int InsertExamStatus(string examStatusName, int enterpriseId) {
            return base.Channel.InsertExamStatus(examStatusName, enterpriseId);
        }
        
        public System.Threading.Tasks.Task<int> InsertExamStatusAsync(string examStatusName, int enterpriseId) {
            return base.Channel.InsertExamStatusAsync(examStatusName, enterpriseId);
        }
        
        public int InsertExamType(string examTypeName, int enterpriseId) {
            return base.Channel.InsertExamType(examTypeName, enterpriseId);
        }
        
        public System.Threading.Tasks.Task<int> InsertExamTypeAsync(string examTypeName, int enterpriseId) {
            return base.Channel.InsertExamTypeAsync(examTypeName, enterpriseId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertUpdateExamResponse HL7Broker.ShieldsApps.IShieldsApps.InsertUpdateExam(HL7Broker.ShieldsApps.InsertUpdateExamRequest request) {
            return base.Channel.InsertUpdateExam(request);
        }
        
        public int InsertUpdateExam(HL7Broker.ShieldsApps.Exam exam, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertUpdateExamRequest inValue = new HL7Broker.ShieldsApps.InsertUpdateExamRequest();
            inValue.exam = exam;
            HL7Broker.ShieldsApps.InsertUpdateExamResponse retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertUpdateExam(inValue);
            message = retVal.message;
            return retVal.InsertUpdateExamResult;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdateExamResponse> InsertUpdateExamAsync(HL7Broker.ShieldsApps.InsertUpdateExamRequest request) {
            return base.Channel.InsertUpdateExamAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertExamByHl7Response HL7Broker.ShieldsApps.IShieldsApps.InsertExamByHl7(HL7Broker.ShieldsApps.InsertExamByHl7Request request) {
            return base.Channel.InsertExamByHl7(request);
        }
        
        public int InsertExamByHl7(HL7Broker.ShieldsApps.Exam exam, int enterpriseId, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertExamByHl7Request inValue = new HL7Broker.ShieldsApps.InsertExamByHl7Request();
            inValue.exam = exam;
            inValue.enterpriseId = enterpriseId;
            HL7Broker.ShieldsApps.InsertExamByHl7Response retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertExamByHl7(inValue);
            message = retVal.message;
            return retVal.InsertExamByHl7Result;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertExamByHl7Response> InsertExamByHl7Async(HL7Broker.ShieldsApps.InsertExamByHl7Request request) {
            return base.Channel.InsertExamByHl7Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertUpdateOrganizationResponse HL7Broker.ShieldsApps.IShieldsApps.InsertUpdateOrganization(HL7Broker.ShieldsApps.InsertUpdateOrganizationRequest request) {
            return base.Channel.InsertUpdateOrganization(request);
        }
        
        public int InsertUpdateOrganization(HL7Broker.ShieldsApps.Organization organization, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertUpdateOrganizationRequest inValue = new HL7Broker.ShieldsApps.InsertUpdateOrganizationRequest();
            inValue.organization = organization;
            HL7Broker.ShieldsApps.InsertUpdateOrganizationResponse retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertUpdateOrganization(inValue);
            message = retVal.message;
            return retVal.InsertUpdateOrganizationResult;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdateOrganizationResponse> InsertUpdateOrganizationAsync(HL7Broker.ShieldsApps.InsertUpdateOrganizationRequest request) {
            return base.Channel.InsertUpdateOrganizationAsync(request);
        }
        
        public HL7Broker.ShieldsApps.Report GetReportByExamId(string doctorId, string examId) {
            return base.Channel.GetReportByExamId(doctorId, examId);
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Report> GetReportByExamIdAsync(string doctorId, string examId) {
            return base.Channel.GetReportByExamIdAsync(doctorId, examId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertReportResponse HL7Broker.ShieldsApps.IShieldsApps.InsertReport(HL7Broker.ShieldsApps.InsertReportRequest request) {
            return base.Channel.InsertReport(request);
        }
        
        public int InsertReport(HL7Broker.ShieldsApps.Report report, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertReportRequest inValue = new HL7Broker.ShieldsApps.InsertReportRequest();
            inValue.report = report;
            HL7Broker.ShieldsApps.InsertReportResponse retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertReport(inValue);
            message = retVal.message;
            return retVal.InsertReportResult;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertReportResponse> InsertReportAsync(HL7Broker.ShieldsApps.InsertReportRequest request) {
            return base.Channel.InsertReportAsync(request);
        }
        
        public HL7Broker.ShieldsApps.Preferences GetPreferencesByUserId(string userId) {
            return base.Channel.GetPreferencesByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.Preferences> GetPreferencesByUserIdAsync(string userId) {
            return base.Channel.GetPreferencesByUserIdAsync(userId);
        }
        
        public bool InsertUpdatePreferencesByUserId(HL7Broker.ShieldsApps.Preferences preference) {
            return base.Channel.InsertUpdatePreferencesByUserId(preference);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUpdatePreferencesByUserIdAsync(HL7Broker.ShieldsApps.Preferences preference) {
            return base.Channel.InsertUpdatePreferencesByUserIdAsync(preference);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice> GetPracticesByUserId(string userId) {
            return base.Channel.GetPracticesByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice>> GetPracticesByUserIdAsync(string userId) {
            return base.Channel.GetPracticesByUserIdAsync(userId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetDoctorsByPracticeId(string practiceId) {
            return base.Channel.GetDoctorsByPracticeId(practiceId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetDoctorsByPracticeIdAsync(string practiceId) {
            return base.Channel.GetDoctorsByPracticeIdAsync(practiceId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice> GetPracticesWithDoctorsByUserId(string userId) {
            return base.Channel.GetPracticesWithDoctorsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Practice>> GetPracticesWithDoctorsByUserIdAsync(string userId) {
            return base.Channel.GetPracticesWithDoctorsByUserIdAsync(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HL7Broker.ShieldsApps.InsertUpdatePracticeResponse HL7Broker.ShieldsApps.IShieldsApps.InsertUpdatePractice(HL7Broker.ShieldsApps.InsertUpdatePracticeRequest request) {
            return base.Channel.InsertUpdatePractice(request);
        }
        
        public int InsertUpdatePractice(string practiceName, int practiceId, out HL7Broker.ShieldsApps.ENUMMESSAGE message) {
            HL7Broker.ShieldsApps.InsertUpdatePracticeRequest inValue = new HL7Broker.ShieldsApps.InsertUpdatePracticeRequest();
            inValue.practiceName = practiceName;
            inValue.practiceId = practiceId;
            HL7Broker.ShieldsApps.InsertUpdatePracticeResponse retVal = ((HL7Broker.ShieldsApps.IShieldsApps)(this)).InsertUpdatePractice(inValue);
            message = retVal.message;
            return retVal.InsertUpdatePracticeResult;
        }
        
        public System.Threading.Tasks.Task<HL7Broker.ShieldsApps.InsertUpdatePracticeResponse> InsertUpdatePracticeAsync(HL7Broker.ShieldsApps.InsertUpdatePracticeRequest request) {
            return base.Channel.InsertUpdatePracticeAsync(request);
        }
        
        public bool InsertUserIntoPractice(int userId, int practiceId) {
            return base.Channel.InsertUserIntoPractice(userId, practiceId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUserIntoPracticeAsync(int userId, int practiceId) {
            return base.Channel.InsertUserIntoPracticeAsync(userId, practiceId);
        }
        
        public bool InsertDoctorIntoPractice(int doctorId, int practiceId) {
            return base.Channel.InsertDoctorIntoPractice(doctorId, practiceId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertDoctorIntoPracticeAsync(int doctorId, int practiceId) {
            return base.Channel.InsertDoctorIntoPracticeAsync(doctorId, practiceId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Share> GetSharedExamsByUserId(string userId) {
            return base.Channel.GetSharedExamsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Share>> GetSharedExamsByUserIdAsync(string userId) {
            return base.Channel.GetSharedExamsByUserIdAsync(userId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.User> GetUsersYouRecentlySharedWith(string userId) {
            return base.Channel.GetUsersYouRecentlySharedWith(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.User>> GetUsersYouRecentlySharedWithAsync(string userId) {
            return base.Channel.GetUsersYouRecentlySharedWithAsync(userId);
        }
        
        public int InsertUpdateSharedExam(HL7Broker.ShieldsApps.Share sharedExam) {
            return base.Channel.InsertUpdateSharedExam(sharedExam);
        }
        
        public System.Threading.Tasks.Task<int> InsertUpdateSharedExamAsync(HL7Broker.ShieldsApps.Share sharedExam) {
            return base.Channel.InsertUpdateSharedExamAsync(sharedExam);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> Search(string userId, string searchText) {
            return base.Channel.Search(userId, searchText);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> SearchAsync(string userId, string searchText) {
            return base.Channel.SearchAsync(userId, searchText);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor> GetDoctorBySearchText(string userId, string searchText, string doctorType) {
            return base.Channel.GetDoctorBySearchText(userId, searchText, doctorType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Doctor>> GetDoctorBySearchTextAsync(string userId, string searchText, string doctorType) {
            return base.Channel.GetDoctorBySearchTextAsync(userId, searchText, doctorType);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.User> GetUserBySearchText(string userId, string searchText, int scopeId) {
            return base.Channel.GetUserBySearchText(userId, searchText, scopeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.User>> GetUserBySearchTextAsync(string userId, string searchText, int scopeId) {
            return base.Channel.GetUserBySearchTextAsync(userId, searchText, scopeId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetReviewedExamsByUserId(int userId) {
            return base.Channel.GetReviewedExamsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetReviewedExamsByUserIdAsync(int userId) {
            return base.Channel.GetReviewedExamsByUserIdAsync(userId);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam> GetNonReviewedExamsByDoctorIdAndPracticeId(int doctorId, int practiceId, int userId) {
            return base.Channel.GetNonReviewedExamsByDoctorIdAndPracticeId(doctorId, practiceId, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.Exam>> GetNonReviewedExamsByDoctorIdAndPracticeIdAsync(int doctorId, int practiceId, int userId) {
            return base.Channel.GetNonReviewedExamsByDoctorIdAndPracticeIdAsync(doctorId, practiceId, userId);
        }
        
        public bool InsertUpdateReviewedExam(string userId, string examId, string isReviewed) {
            return base.Channel.InsertUpdateReviewedExam(userId, examId, isReviewed);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUpdateReviewedExamAsync(string userId, string examId, string isReviewed) {
            return base.Channel.InsertUpdateReviewedExamAsync(userId, examId, isReviewed);
        }
        
        public System.Collections.Generic.List<HL7Broker.ShieldsApps.ExamNote> GetExamNotesByExamId(int examId) {
            return base.Channel.GetExamNotesByExamId(examId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HL7Broker.ShieldsApps.ExamNote>> GetExamNotesByExamIdAsync(int examId) {
            return base.Channel.GetExamNotesByExamIdAsync(examId);
        }
        
        public int InsertExamNoteByExamIdAndUserId(HL7Broker.ShieldsApps.ExamNote examNote) {
            return base.Channel.InsertExamNoteByExamIdAndUserId(examNote);
        }
        
        public System.Threading.Tasks.Task<int> InsertExamNoteByExamIdAndUserIdAsync(HL7Broker.ShieldsApps.ExamNote examNote) {
            return base.Channel.InsertExamNoteByExamIdAndUserIdAsync(examNote);
        }
    }
}
